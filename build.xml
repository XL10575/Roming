<!--
Project directory structure:
  build.xml : this file
  .gitignore: git ignore files for Java (EECS 293 version).
              This is a hidden file, but do not ignore!
  src/ : source .java files

Generated directories
  build/ : .class files
  report/
    junit/index.html : JUnit report
    jacoco/index.html: JaCoCo report
  doc/ : JavaDoc

$ANT_HOME/lib must contain (see Ant-JUnit and JaCoCo installation guides):
  ant-junit4.jar
  ant-junit.jar
  hamcrest-2.2.jar
  junit-4.13.jar
  jacocoant.jar
-->
<project name="testexample" default="test" xmlns:jacoco="antlib:org.jacoco.ant">

  <!-- Define JaCoCo Ant tasks -->
  <taskdef uri="antlib:org.jacoco.ant"
           resource="org/jacoco/ant/antlib.xml"
           classpath="${ant.home}/lib/jacocoant.jar"/>

  <!--   Directory with source files -->
  <property name="src.dir" value="src"/>

  <!--   Directories with the class files -->
  <property name="build.dir" value="build"/>

  <!--   Directories and files with the output -->
  <property name="output.dir" value="output"/>
  <property name="output.file" value="${output.dir}/output.txt"/>
  <property name="error.file" value="${output.dir}/error.txt"/>

  <!--   Directories and files with the reports on unit test and code coverage -->
  <property name="report.dir" value="report"/>
  <property name="junit.dir" value="${report.dir}/junit"/>
  <property name="jacoco.dir" value="${report.dir}/jacoco"/>
  <property name="jacoco.file" value="${jacoco.dir}/jacoco.exec"/>

  <!--   Directory for JavaDoc output -->
  <property name="doc.dir" value="doc"/>

  <!--   Additional jar that may be needed for properly running junit -->
  <!--
       If you prefer an explicit JUnit path (instead of relying on jars in $ANT_HOME/lib),
       uncomment and adapt as needed:

  <path id="junit.classpath">
    <pathelement location="${ant.home}/lib/junit-4.13.jar"/>
    <pathelement location="${ant.home}/lib/ant-junit4.jar"/>
    <pathelement location="${ant.home}/lib/ant-junit.jar"/>
    <pathelement location="${ant.home}/lib/hamcrest-2.2.jar"/>
  </path>
  -->

  <!--   ant clean : remove generated files -->
  <target name="clean">
    <delete dir="${build.dir}"/>
    <delete dir="${report.dir}"/>
    <delete dir="${doc.dir}"/>
    <delete dir="${output.dir}"/>
  </target>

  <!--   ant build : compile the src  -->
  <target name="build">
    <mkdir dir="${build.dir}"/>
    <javac srcdir="${src.dir}" destdir="${build.dir}" debug="true" includeAntRuntime="yes"/>
  </target>

  <!--   ant test : run unit tests under JaCoCo coverage -->
  <target name="test" depends="build">
  <mkdir dir="${report.dir}"/>
  <mkdir dir="${junit.dir}"/>
  <mkdir dir="${jacoco.dir}"/>

  <jacoco:coverage destfile="${jacoco.file}">
    <junit fork="yes" includeAntRuntime="yes" printsummary="withOutAndErr">
      <classpath>
        <pathelement path="${build.dir}"/>
        <fileset dir="${ant.home}/lib">
          <include name="junit-4.13.jar"/>
          <include name="hamcrest-2.2.jar"/>
        </fileset>
      </classpath>

      <formatter type="xml"/>
      <batchtest todir="${junit.dir}">
        <fileset dir="${build.dir}" includes="**/*Test.class"/>
      </batchtest>

      <assertions>
        <enable/>
      </assertions>
    </junit>
  </jacoco:coverage>
</target>


  <!--   ant report : generate the JUnit and code coverage reports  -->
  <target name="report" depends="test">
    <junitreport todir="${junit.dir}">
      <fileset dir="${junit.dir}" includes="TEST-*.xml"/>
      <report todir="${junit.dir}"/>
    </junitreport>

    <jacoco:report>
      <executiondata>
        <file file="${jacoco.file}"/>
      </executiondata>
      <structure name="${ant.project.name}">
        <classfiles>
          <fileset dir="${build.dir}">
  <include name="**/Barricade.class"/>
  <include name="**/Barricade$*.class"/>
  <include name="**/MatrixMap.class"/>
  <include name="**/MatrixMap$*.class"/>
</fileset>

        </classfiles>
        <sourcefiles>
          <fileset dir="${src.dir}"/>
        </sourcefiles>
      </structure>
      <html destdir="${jacoco.dir}"/>
    </jacoco:report>
  </target>

  <!--   ant doc: generate JavaDoc documentation -->
  <target name="doc">
    <mkdir dir="${doc.dir}"/>
    <javadoc destdir="${doc.dir}" package="yes">
      <fileset dir="${src.dir}" defaultexcludes="yes">
        <exclude name="**/*Test.java"/>
      </fileset>
    </javadoc>
  </target>
</project>
